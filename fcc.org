#+TITLE: freeCodeCamp
#+PROPERTY: ANKI_DECK CS
#+PROPERTY: Source https://www.freecodecamp.org/learn/

* Responsive Web Design
:LOGBOOK:
CLOCK: [2021-10-21 Thu 13:06]--[2021-10-21 Thu 14:06] =>  1:00
CLOCK: [2021-10-19 Tue 13:57]--[2021-10-19 Tue 15:57] =>  2:00
CLOCK: [2021-10-14 Thu 17:00]--[2021-10-14 Thu 18:00] =>  1:00
CLOCK: [2021-10-14 Thu 14:02]--[2021-10-14 Thu 16:02] =>  2:00
CLOCK: [2021-10-12 Tue 15:17]--[2021-10-12 Tue 17:17] =>  2:00
CLOCK: [2021-10-08 Fri 18:27]--[2021-10-08 Fri 19:27] =>  1:00
CLOCK: [2021-10-08 Fri 14:59]--[2021-10-08 Fri 16:59] =>  2:00
CLOCK: [2021-10-08 Fri 10:35]--[2021-10-08 Fri 12:35] =>  2:00
CLOCK: [2021-10-05 Tue 18:17]--[2021-10-05 Tue 19:17] =>  1:00
CLOCK: [2021-10-05 Tue 15:09]--[2021-10-05 Tue 17:09] =>  2:00
CLOCK: [2021-09-01 Wed 16:52]--[2021-09-01 Wed 18:52] =>  2:00
CLOCK: [2021-09-01 Wed 14:18]--[2021-09-01 Wed 16:18] =>  2:00
CLOCK: [2021-09-01 Wed 09:16]--[2021-09-01 Wed 11:16] =>  2:00
CLOCK: [2021-08-30 Mon 21:23]--[2021-08-30 Mon 22:23] =>  1:00
CLOCK: [2021-08-28 Sat 21:18]--[2021-08-28 Sat 22:18] =>  1:00
CLOCK: [2021-08-28 Sat 16:59]--[2021-08-28 Sat 17:59] =>  1:00
CLOCK: [2021-08-26 Thu 12:02]--[2021-08-26 Thu 14:02] =>  2:00
CLOCK: [2021-08-25 Wed 15:58]--[2021-08-25 Wed 17:58] =>  2:00
CLOCK: [2021-08-23 Mon 16:14]--[2021-08-23 Mon 18:14] =>  2:00
CLOCK: [2021-08-23 Mon 10:39]--[2021-08-23 Mon 12:39] =>  2:00
:END:
:PROPERTIES:
:Source: https://www.freecodecamp.org/learn/responsive-web-design/
:END:

** Padding Values
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978616274
:END:

*** Text

css:

#+BEGIN_SRC css
/* Applies to {{c1::all four sides}} */
padding: 1em;

/* Applies to {{c1::vertical, horizontal}} */
padding: 5% 10%;

/* Applies to {{c1::top, horizontal, bottom}} */
padding: 1em 2em 2em;

/* Applies to {{c1::top, right, bottom, left}} */
padding: 5px 1em 0 2em;
#+END_SRC

** Padding
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736813864
:END:

*** Text

css: An element's {{c1::Padding}} controls the {{c2::amount of space between its content and
border}}

** Margin
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814157
:END:

*** Text

css: An element's {{c1::Margin}} controls the {{c2::amount of space between its border and
surrounding elements}}

** Classes Priority
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814265
:END:

*** Text

css: If an element has two classes that style the same property, {{c1::the last one declared in
the stylesheet}} has the priority

** Class vs Id Priority
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814355
:END:

*** Text

css: If an element has an id and a class that style the same property, {{c1::the id}} style has the
priority

** Inline Priority
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814508
:END:

*** Text

css: If an element has an id and an inline style that style the same property, the {{c1::inline}}
style has the priority

** !important Priority
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814618
:END:

*** Text

css: In a stylesheet, override all the possible styles by {{c1::suffixing the property with
~!important~}}

** CSS Variables
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814732
:END:

*** Text

css: CSS Variables are defined by {{c1::prefixing the property with ~--~}} and are accessed by using
{{c1::var()}}

** Pseudo-Classes
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814864
:END:

*** Text

css: ~:hover~ is called a {{c1::Pseudo-Class}}

** Relative Positioning
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736814962
:END:

*** Text

css: With {{c1::relative positioning}} an element can be {{c2::shifted away from its original
position}}

** Relative Positioning Space Left
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736815229
:END:

*** Text

css: With {{c1::relative}} positioning the original space the object would take {{c2::is}}
preserved

** Absolute Positioning
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736815342
:END:

*** Text

css: With {{c1::absolute positioning}} an element can be {{c2::fixed to an absolute position
relative to its parent container}}

** Absolute Positioning Space Left
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736815468
:END:

*** Text

css: With {{c1::absolute}} positioning the original space the object would take {{c2::isn't}}
preserved

** Absolute vs Fixed
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629736815558
:END:

*** Text

css: The difference between Absolute and Fixed positioning is that Absolute {{c1::will scroll away
from the view}}

** z-index
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978617582
:END:

*** Text

css: {{c1::Change the z-order of overlapping elements}} with {{c2::z-index}}

** margin: auto
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978617678
:END:

*** Text

css: Set {{c1::margin to auto}} to center a block element

** linear-gradient()
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978617812
:END:

*** Text

css: Set {{c1:: ~background~ to ~linear-gradient(DEGREES, COLOR1, COLOR2, ...)~ }} to create a
linear gradient on an element

** transform
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978618032
:END:

*** Text

css: {{c1::Rotate, scale, skew, or translate an element}} with {{c2::transform}}

** img's alt Best Practice
:PROPERTIES:
:ANKI_NOTE_TYPE: Only Text
:ANKI_NOTE_ID: 1629978618150
:END:

*** Text

html: best practice: Add an alt attribute to all non-decorative img tags (or set it to "")

** main, header, footer, nav, article, and section Best Practice
:PROPERTIES:
:ANKI_NOTE_TYPE: Only Text
:ANKI_NOTE_ID: 1629978618239
:END:

*** Text

html: best practice: Use main, header, footer, nav, article, and section tags

** figure and figcaption Best Practice
:PROPERTIES:
:ANKI_NOTE_TYPE: Only Text
:ANKI_NOTE_ID: 1629978618524
:END:

*** Text

html: best practice: Use the figure and figcaption tags

** Form label "for" and input "name"
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978618673
:END:

*** Text

html: In the following example "for" is linked to {{c1::id of the input}}.
"name" controls the {{c1::name in the name/value pair of the submitted data}}.

#+BEGIN_SRC html
<label for="name">Name:</label>
<input type="text" id="name" name="name">
#+END_SRC

** fieldset Best Practice
:PROPERTIES:
:ANKI_NOTE_TYPE: Only Text
:ANKI_NOTE_ID: 1629978618763
:END:

*** Text

html: best practice: Wrap radio buttons inside a fieldset tag and add a legend tag

** time Best Practice
:PROPERTIES:
:ANKI_NOTE_TYPE: Only Text
:ANKI_NOTE_ID: 1629978618867
:END:

*** Text

html: best practice: Use the time tag

** Contrast Best Practice
:PROPERTIES:
:ANKI_NOTE_TYPE: Only Text
:ANKI_NOTE_ID: 1629978618969
:END:

*** Text

css: Have a contrast of at least 4.5:1 (as recommended by the WCAG)

** Media Queries
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978619088
:END:

*** Text

css: {{c1::Apply different rules to different device sizes}} with {{c2::Media Queries}}

** Responsive Images
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978619272
:END:

*** Text

css: Make images responsive with the following css:

{{c1::
#+BEGIN_SRC css
img {
  max-width: 100%;
  height: auto;
}
#+END_SRC
}}

** Responsive Typography
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1629978619422
:END:

*** Text

css: Make typography responsive by using one of the following units: {{c1::vw, vh, vmin or vmax}}

** flex-direction
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1630399766942
:END:

*** Text

css: flex: {{c1::Set the layout (row or column) of flex items}} with {{c2::flex-direction}}

** flex-wrap
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1630399767017
:END:

*** Text

css: flex: {{c1::Allow items to wrap into a new row or column}} with {{c2::flex-wrap}}

** flex-grow and flex-shrink
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1630399767112
:END:

*** Text

css: flex: {{c1::Increase or decrease the size of items in a container according to its size}} with
{{c2::flex-grow}} or {{c2::flex-shrink}}

** flex-basis
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1630399767356
:END:

*** Text

css: flex: {{c1::Set the initial size of an item}} with {{c2::flex-basis}}

** order
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1630399767431
:END:

*** Text

css: flex: grid: {{c1::Set the order of the items}} with {{c2::order}}

** grid-gap
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1630399767648
:END:

*** Text

css: grid: {{c1::Set a gap between the rows and columns}} with {{c2::grid-gap}}

* JavaScript Algorithms and Data Structures
:LOGBOOK:
CLOCK: [2021-10-25 Mon 17:39]--[2021-10-25 Mon 18:39] =>  1:00
CLOCK: [2021-10-25 Mon 14:12]--[2021-10-25 Mon 16:12] =>  2:00
CLOCK: [2021-10-21 Thu 14:07]--[2021-10-21 Thu 18:07] =>  4:00
:END:

** Array Operations
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1634836734881
:END:

*** Text

js:

Add an element at the end of an array: {{c1::ARRAY.push()}}

Remove the last element of an array: {{c1::ARRAY.pop()}}

Add an element at the beginning of an array: {{c1::ARRAY.unshift()}}

Remove the first element of an array: {{c1::ARRAY.shift()}}

Concatenate two arrays: {{c1::ARRAY1.concat(ARRAY2)}}

Convert an array to a list of arguments: {{c1::FUNC(...ARRAY)}}

Get the index of an element: {{c1::ARRAY.indexOf(ELEMENT)}}

** Access The Property Of An Object
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1639145363526
:END:

*** Text

js: Access the property of an object with {{c1::OBJECT.PROPERTY}} or
{{c1::OBJECT[PROPERTY]}}

** Delete A Property From An Object
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1634901879300
:END:

*** Text

js: Remove a property from an object: {{c1::delete OBJECT.PROPERTY}}

** Best Practice: Use let or const
:PROPERTIES:
:ANKI_NOTE_TYPE: Only Text
:ANKI_NOTE_ID: 1635246277763
:END:

*** Text

js: best practice: Use ~let~ or ~const~ when possible

** Object.freeze()
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1635245812811
:END:

*** Text

js: Forbid any changes on an object: {{c1::Object.freeze(OBJECT)}}

** Destructuring
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1635245812984
:END:

*** Text

js:

#+BEGIN_SRC javascript
const person = { name: "Jody", age: 27 }
const user = { jody: { name: "Jody", age: 27 } }
const array = [1, 2, 3, 4, 5]
#+END_SRC

Destructure ~person~ into two variables, ~name~ and ~age~: {{c1:: ~let { name, age } = person~ }}

Destructure ~person~ into two variables, ~myName~ and ~myAge~: {{c1:: ~let { name: myName, age: myAge } = person~ }}

Destructure ~user~ into two variables ~name~ and ~age~: {{c1:: ~let { jody: { name, age } } = user~ }}

Destructure ~array~ into its first and second values and the rest: {{c1:: ~let [first, second, ...rest] = array~ }}

** Export Functions
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1635245813122
:END:

*** Text

js: Export functions: {{c1:: ~export { FUNC1, FUNC2 }~ }}

** Import Functions
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1635245813230
:END:

*** Text

js: Import functions: {{c1:: ~import * as myModule from './FILE.js'~ }}

** Check That A Property Exists In An Object
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1639145363979
:END:

*** Text

js: Check that a property exists in an object with {{c1::OBJECT.hasOwnProperty(PROPERTY)}} or
{{c1::PROPERTY in OBJECT}}


** Loop Through The Keys Of An Object
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_NOTE_ID: 1639145364030
:END:

*** Text

js: Loop throught the keys of an object: {{c1:: ~for (let key in OBJECT) {...}~ }}
